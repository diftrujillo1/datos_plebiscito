{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(stringi)\nlibrary(stringr)\nlibrary(treemap)\n\ndf_plebiscito <- read_csv(\"data/votacion_plebiscito_2016_deptos.csv\", col_names = TRUE)\ndf_pres <- read_csv(\"data/votacion_2nda_vuelta_2014_presidencial_deptos.csv\", col_names = TRUE)\ndf_gobernadores <- read_csv(\"data/gobernadores_colombia.csv\", col_names = TRUE)\n\ndf_gobernadores$`Partido Político`[7] <- gsub(\"Cambio\", \"\", df_gobernadores$`Partido Político`[7])\ndf_plebiscito<- df_plebiscito %>% filter(Names_depto != \"CONSULADOS\" & Names_depto != \"Todos\")\n\ndf_plebiscito <- df_plebiscito %>% mutate(Ganador_Pleb = ifelse(Votos_SI > Votos_NO, \"Sí\", \"No\"))\ndf_pres <- df_pres %>% mutate(Ganador_Pres = ifelse(Votos_Santos > Votos_Zuluaga, \"Santos\", \"Zuluaga\"))\n\ndf_cruce_pleb <- df_plebiscito %>% select(Names_depto, Ganador_Pleb)\ndf_cruce_pres <- df_pres %>% mutate(Names_depto = Name_Depto) %>% select(Names_depto, Ganador_Pres)\ndf_cruce <- left_join(df_cruce_pleb, df_cruce_pres, by = c(\"Names_depto\"))\n\ndf_santos_si <- df_cruce %>% filter(Ganador_Pleb == \"Sí\" & Ganador_Pres == \"Santos\") %>% summarise(count=n())\ndf_santos_no <- df_cruce %>% filter(Ganador_Pleb == \"No\" & Ganador_Pres == \"Santos\") %>% summarise(count=n())\ndf_zul_no <- df_cruce %>% filter(Ganador_Pleb == \"No\" & Ganador_Pres == \"Zuluaga\") %>% summarise(count=n())\ndf_zul_si <- df_cruce %>% filter(Ganador_Pleb == \"Sí\" & Ganador_Pres == \"Zuluaga\") %>% summarise(count=n())\n\ndf_contingencia <- data.frame(Sí = c(df_santos_si$count, df_zul_si$count), \n                              No = c(df_santos_no$count, df_zul_no$count), \n                              row.names = c(\"Santos\", \"Zuluaga\"))\n\ndf_contingencia_ <- data.frame(Ganador_Pres = c(\"Santos\", \"Santos\", \"Zuluaga\", \"Zuluaga\"),\n                               Ganador_Pleb = c(\"Sí\", \"No\", \"Sí\", \"No\"),\n                               count = c(df_santos_si$count, df_santos_no$count, df_zul_si$count, df_zul_no$count))\ndf_contingencia_ <- df_contingencia_ %>% mutate(Color = ifelse(Ganador_Pleb==\"Sí\", \"#7fcdbb\", \"#f03b20\"))\n\ntreemap(df_contingencia_, #Your data frame object\n        index=c(\"Ganador_Pres\",\"Ganador_Pleb\"),  #A list of your categorical variables\n        vSize = \"count\",  #This is your quantitative variable\n        vColor = \"Color\",\n        type = \"color\", #Type sets the organization and color scheme of your treemap\n        palette = \"Reds\",\n        title = \"\", #Customize your title\n        #fontsize.title = 10, #Change the font size of the title\n        overlap.labels = 1\n)\ndf_contingencia_ <- df_cruce %>% filter(!is.na(Ganador_Pres)) %>%\n  group_by(Ganador_Pleb,Ganador_Pres) %>% summarise(count=n())\ntreemap(df_contingencia_, #Your data frame object\n        index=c(\"Ganador_Pleb\",\"Ganador_Pres\"),  #A list of your categorical variables\n        vSize = \"count\",  #This is your quantitative variable\n        type=\"index\", #Type sets the organization and color scheme of your treemap\n        palette = \"Reds\",  #Select your color palette from the RColorBrewer presets or make your own.\n        title=\"Análisis Plebiscito\", #Customize your title\n        fontsize.title = 14, #Change the font size of the title\n        overlap.labels = 0\n)\n\ndf_plebiscito <- df_plebiscito[c(-1,-6,-15),]\ndf_pres <- df_pres[c(-1,-6,-35),]\n\ndf_gobernadores$Depto <- gsub(\"á|Á\",\"a\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"é|É\",\"e\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"í|Í\",\"i\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"ó|Ó\",\"o\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"ú|Ú\",\"u\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"\\\\s+\",\" \", df_gobernadores$Depto)\ndf_gobernadores$Depto <- stri_trim(df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"N. de Santander\",\"NORTE DE SAN\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- gsub(\"Valle del Cauca\",\"Valle\", df_gobernadores$Depto)\ndf_gobernadores$Depto <- toupper(df_gobernadores$Depto)\n\n\ndf_gobernadores <- df_gobernadores %>% mutate(Ganador_Gob = ifelse(grepl(\"U-Cambio|La U - Cambio Radical|U. CR|Cambio-U\",\n                                                                         df_gobernadores$`Partido Político`), \"La U - Cambio Radical\",\n                                                                   ifelse(grepl(\"C.R|CR|Cambio Radical|Cambio\",\n                                                                                df_gobernadores$`Partido Político`), \"Cambio Radical\",\n                                                                          ifelse(grepl(\"Centro Democrático|Centro\",\n                                                                                       df_gobernadores$`Partido Político`), \"Centro Democrático\",\n                                                                                 ifelse(grepl(\"La U|U.|U\", df_gobernadores$`Partido Político`),\n                                                                                        \"La U\", NA)))))\n\ndf_cruce_gob <- df_gobernadores %>% mutate(Names_depto = Depto) %>% select(Names_depto, Ganador_Gob) \ndf_cruce <- left_join(df_cruce, df_cruce_gob, by = c(\"Names_depto\"))\ndf_cruce_ <- df_cruce %>% filter(!is.na(Ganador_Pres) & !is.na(Ganador_Gob)) %>%\n  group_by(Ganador_Pleb,Ganador_Pres,Ganador_Gob) %>% summarise(count=n()) \ndf_cruce_ <- df_cruce %>% filter(!is.na(Ganador_Pres) & !is.na(Ganador_Gob)) %>%\n  group_by(Ganador_Pleb,Ganador_Pres,Ganador_Gob) %>% summarise(count=n()) %>% mutate(Color = ifelse(Ganador_Pleb == \"Sí\", \"#7fcdbb\", \"#f03b20\"))\ndf_cruce_ <- table(df_cruce)\nlibrary(treemap)\ntreemap(df_cruce_, #Your data frame object\n        index=c(\"Ganador_Gob\",\"Ganador_Pres\",\"Ganador_Pleb\"),  #A list of your categorical variables\n        vSize = \"count\",  #This is your quantitative variable\n        vColor = \"Color\",\n        type = \"color\", #Type sets the organization and color scheme of your treemap\n        palette = c(\"#7fcdbb\", \"#f03b20\"),\n        title=\"Análisis Plebiscito\", #Customize your title\n        fontsize.title = 15, #Change the font size of the title\n        overlap.labels = 0.5\n)\n\n\ndf_cruce_tidy <- df_cruce %>% filter(!is.na(Ganador_Pres) & !is.na(Ganador_Gob)) %>%\n  dplyr::group_by(Ganador_Pleb, Ganador_Pres, Ganador_Gob) %>% dplyr::summarise(count=n())  %>%\n  tidyr::spread(Ganador_Gob, count) %>% tidyr::gather(Ganador_Gob, count, -Ganador_Pleb, -Ganador_Pres)\n\ntitleLabel <- \"Análisis de las Votaciones en el Plebiscito\"\nxlab <- \"Candidatos Presidenciales 2014\"\nyLabel <- \"Conteo\"\nflabel <- \"Partidos Políticos\"\nleg_pos <- \"right\"\nggplot(df_cruce_tidy, aes(Ganador_Pres, weight = count, fill = Ganador_Gob)) + \n  geom_bar(position = \"dodge\") + geom_text(aes(label = count, y = count + 0.05), position = position_dodge(0.9), vjust = 0) +  \n  labs(title = titleLabel, x = xlab, y = yLabel, fill = flabel) +\n  theme(legend.position=leg_pos) + facet_grid(.~Ganador_Pleb)\n\n\ndf_cruce_tidy2 <- df_cruce %>% filter(!is.na(Ganador_Pres) & !is.na(Ganador_Gob)) %>%\n  dplyr::group_by(Ganador_Pleb, Ganador_Pres, Ganador_Gob) %>%\n  dplyr::summarise(count = n()) %>%\n  dplyr::arrange(desc(count))\n\ntitleLabel <- \"Análisis de las Votaciones en el Plebiscito\"\nxlab <- \"Candidatos Presidenciales 2014\"\nyLabel <- \"Partidos Políticos\"\nggplot(df_cruce_tidy2, aes(x = Ganador_Pres, y = Ganador_Gob, size = count)) +\n  geom_point() + labs(title = titleLabel, x = xlab, y = yLabel) + \n  theme(legend.position=\"none\") + facet_grid(.~Ganador_Pleb)\n\n\nabstencionismo <- df_plebiscito$Porc_Abstensionismo\nabstencionismo <- abstencionismo[c(-1,-6,-15)]\ndeptos <- df_plebiscito$Names_depto\ndeptos <- deptos[c(-1,-6,-15)]\n\ndf_abs <- data.frame(Abstencionismo = abstencionismo, x = deptos)\ndf_abs <- df_abs %>% filter(Abstencionismo <= 0.6)\n\nggplot(data = df_abs, aes(x = factor(\"\"), y= Abstencionismo)) + \n  geom_boxplot() + geom_point() + labs(title = titleLabel, x = xlab, y = yLabel)\n\n\n",
    "created" : 1510514518335.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3021507179",
    "id" : "1CC427B8",
    "lastKnownWriteTime" : 1475782424,
    "last_content_update" : 1475782424,
    "path" : "C:/Users/natalia.raffo/Desktop/datos_plebiscito/analyse_data_gob.R",
    "project_path" : "analyse_data_gob.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}