{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(stringr)\n\ndf_plebiscito <- read_csv(\"data/votacion_plebiscito_2016_mpios.csv\", col_names = TRUE)\ndf_pres <- read_csv(\"data/votacion_2nda_vuelta_2014_presidencial_mpios.csv\", col_names = TRUE)\ndf_mpios <- read_csv(\"data/alcaldes_2015.csv\", col_names = TRUE)\n\ndf_plebiscito<- df_plebiscito %>% filter(Names_depto != \"CONSULADOS\")\n#df_plebiscito <- df_plebiscito[c(-1,-6,-15),]\n#df_pres <- df_pres[c(-1,-6,-35),]\n\ndf_plebiscito <- df_plebiscito %>% mutate(Ganador_Pleb = ifelse(Votos_SI > Votos_NO, \"Sí\", \"No\"))\ndf_pres <- df_pres %>% mutate(Ganador_Pres = ifelse(Votos_Santos > Votos_Zuluaga, \"Santos\", \"Zuluaga\"))\n\ndf_cruce_pleb <- df_plebiscito %>% select(Names_mpio, Ganador_Pleb)\ndf_cruce_pres <- df_pres %>% select(Names_mpio, Ganador_Pres)\ndf_cruce <- left_join(df_cruce_pleb, df_cruce_pres, by = c(\"Names_mpio\"))\n\ndf_santos_si <- df_cruce %>% filter(Ganador_Pleb == \"Sí\" & Ganador_Pres == \"Santos\") %>% summarise(count=n())\ndf_santos_no <- df_cruce %>% filter(Ganador_Pleb == \"No\" & Ganador_Pres == \"Santos\") %>% summarise(count=n())\ndf_zul_no <- df_cruce %>% filter(Ganador_Pleb == \"No\" & Ganador_Pres == \"Zuluaga\") %>% summarise(count=n())\ndf_zul_si <- df_cruce %>% filter(Ganador_Pleb == \"Sí\" & Ganador_Pres == \"Zuluaga\") %>% summarise(count=n())\n\ndf_contingencia <- data.frame(Sí = c(df_santos_si$count, df_zul_si$count), \n                              No = c(df_santos_no$count, df_zul_no$count), \n                              row.names = c(\"Santos\", \"Zuluaga\"))\n\ndf_part_pol <- df_mpios %>% group_by(`Partido Político`) %>% summarise(count = n()) %>% arrange(desc(count))\n\ndf_part_pol <- df_part_pol[1:8,]\npart_pol <- df_part_pol$`Partido Político`\n\nlist_df <- lapply(part_pol, function(p){\n  df_mpios_part_pol <- df_mpios %>% filter(`Partido Político` == p) %>% select(Names_mpio, Names_depto, `Partido Político`)\n  return(df_mpios_part_pol)\n})\ndf_mpios_part_pol <- bind_rows(list_df)\ndf_pleb <- df_plebiscito %>% select(Names_mpio, Names_depto, Votos_SI, Votos_NO)\ndf_cruce <- left_join(df_pleb, df_mpios_part_pol, by = c(\"Names_mpio\", \"Names_depto\"))\ndf_cruce <- df_cruce %>% mutate(Ganador_Pleb = ifelse(Votos_SI > Votos_NO, \"Sí\", \"No\"))\ndf_cruce_ <- df_cruce %>% filter(!is.na(`Partido Político`)) %>%\n  group_by(Ganador_Pleb, `Partido Político`) %>% summarise(count=n()) %>%\n  tidyr::spread(`Partido Político`, count) %>% tidyr::gather(`Partido Político`, count, -Ganador_Pleb)\n\ndf_cruce_show <- df_cruce_ %>% group_by(`Partido Político`) %>% summarise(Votación = sum()) %>% \n  mutate(`Porcentaje Votación` = count / Votación) %>% arrange(desc(`Partido Político`)) \n\ndf_cruce_$`Partido Político` <- gsub(\"PARTIDO|PARTIDO DE\",\"\", df_cruce_$`Partido Político`)\ntitleLabel <- \"Análisis de las Votaciones del Plebiscito vs. \\n Partidos Políticos en las elecciones \\n de la alcaldía\"\nxlab <- \"Partidos Políticos\"\nyLabel <- \"Conteo\"\nflabel <- \"Votación Plebiscito\"\nleg_pos <- \"right\"\nggplot(df_cruce_, aes(`Partido Político`, weight = count, fill = Ganador_Pleb)) + \n  geom_bar(position = \"dodge\") + geom_text(aes(label = count, y = count + 0.5), size=3,position = position_dodge(0.9), vjust = 0.5, hjust=1.5) +  \n  labs(title = titleLabel, x = xlab, y = yLabel, fill = flabel) + theme_minimal() + \n  theme(legend.position=leg_pos) + theme(axis.text.y = element_text(size=6)) + coord_flip()\n\ndf_pres_ <- df_pres %>% select(Names_mpio, Names_depto, Votos_Santos, Votos_Zuluaga)\ndf_cruce2 <- left_join(df_pres_, df_mpios_part_pol, by = c(\"Names_mpio\", \"Names_depto\"))\ndf_cruce2_ <- df_cruce2 %>% mutate(Ganador_Pres = ifelse(Votos_Santos > Votos_Zuluaga, \"Santos\", \"Zuluaga\"))\ndf_cruce2_ <- df_cruce2_ %>% filter(!is.na(`Partido Político`)) %>%\n  group_by(Ganador_Pres, `Partido Político`) %>% dplyr::summarise(count=n()) %>% arrange(desc(count))\n\ndf_cruce2_show_ <- df_cruce2_ %>% dplyr::group_by(`Partido Político`) %>% dplyr::summarise(Votación = sum(count))\ndf_cruce2_show_ <- left_join(df_cruce2_, df_cruce2_show_, by = \"Partido Político\") \ndf_cruce2_show_ <- df_cruce2_show_ %>% \n  dplyr::mutate(`Porcentaje Votación` = round(count/Votación,4)*100) %>% \n  dplyr::arrange(desc(`Partido Político`))\n\npos_santos <- df_cruce2_show_ %>% filter(Ganador_Pres == 'Santos') %>%\n  mutate(pos = `Porcentaje Votación`/1000*7) %>% select(Ganador_Pres,`Partido Político`, pos)\npos_zul <- df_cruce2_show_ %>% filter(Ganador_Pres == 'Zuluaga') %>%\n  mutate(pos = 1-`Porcentaje Votación`/1000*8) %>% select(Ganador_Pres,`Partido Político`, pos)\npos <- bind_rows(list(pos_santos,pos_zul))\ndf_cruce2_show_ <- left_join(df_cruce2_show_, pos, by = c(\"Ganador_Pres\", \"Partido Político\"))\n  #select(Ganador_Pres, `Partido Político`, `Porcentaje Votación`)\ndf_cruce2_show_$`Partido Político` <- gsub(\"PARTIDO \", \"\", df_cruce2_show_$`Partido Político`)\ntitleLabel <- \"Análisis de las Votaciones 2nda Vuelta Presidencial vs. \\n Partidos Políticos en las elecciones \\n de la alcaldía\"\nxlab <- \"Partidos Políticos\"\nyLabel <- \"Proporción Votación\"\nflabel <- \"Candidatos \\n Presidenciales\"\nggplot(df_cruce2_show_, aes(`Partido Político`, weight = `Porcentaje Votación`, fill = Ganador_Pres)) + \n  geom_bar(position = \"fill\")  +  \n  labs(title = titleLabel, x = xlab, y = yLabel, fill = flabel) +\n  scale_y_continuous(labels = scales::percent) + theme_minimal() + \n  geom_text(aes(label = paste0(`Porcentaje Votación`,\"%\"), y = pos), size=2.5) +\n  theme(legend.position=leg_pos) + theme(axis.text.y = element_text(size=6)) + coord_flip()\n\ndf_santos_si\ndf_contingencia_ <- data.frame(Ganador_Pres = c(\"Santos\", \"Santos\", \"Zuluaga\", \"Zuluaga\"),\n                              Ganador_Pleb = c(\"Sí\", \"No\", \"Sí\", \"No\"),\n                              count = c(df_santos_si$count, df_santos_no$count, df_zul_si$count, df_zul_no$count))\ndf_contingencia_ <- df_contingencia_ %>% mutate(Color = ifelse(Ganador_Pleb==\"Sí\", \"#7fcdbb\", \"#f03b20\"))\n\ntreemap(df_contingencia_, #Your data frame object\n        index=c(\"Ganador_Pres\",\"Ganador_Pleb\"),  #A list of your categorical variables\n        vSize = \"count\",  #This is your quantitative variable\n        vColor = \"Color\",\n        type = \"color\", #Type sets the organization and color scheme of your treemap\n        palette = \"Reds\",\n        title = \"\", #Customize your title\n        #fontsize.title = 10, #Change the font size of the title\n        overlap.labels = 1\n)\n\ndf_cruce_ <- df_cruce %>% filter(!is.na(`Partido Político`)) %>%\n  group_by(Ganador_Pleb, `Partido Político`) %>% summarise(count=n()) %>%\n  dplyr::arrange(desc(count))\n\ntitleLabel <- \"\"\nxlab <- \"\"\nyLabel <- \"\"\nflabel <- \"Votación Plebiscito\"\nggplot(df_cruce_, aes(Ganador_Pleb, fill = `Partido Político`, weight = count)) + geom_bar(width = 1) +\n  coord_polar() + labs(title = titleLabel, x = xlab, y = yLabel, fill=flabel) + \n  theme_minimal() + theme(legend.position=leg_pos)\n\n\n\n",
    "created" : 1510514515558.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2383403235",
    "id" : "6AC13D4F",
    "lastKnownWriteTime" : 1475875936,
    "last_content_update" : 1475875936,
    "path" : "C:/Users/natalia.raffo/Desktop/datos_plebiscito/analyse_data_mpio.R",
    "project_path" : "analyse_data_mpio.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}